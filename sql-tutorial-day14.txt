# ----> SQL Tutorial ----

# https://github.com/astechedu/database-tutorial.git

# SQL Basics For Beginers



--- Day 14 ---

#13. CASE.....END, IF.....Else


SQL CASE Expression:

         The CASE expression goes through conditions and returns a value when the first condition is met (like an if-then-else statement).
         
         If there is no ELSE part and no conditions are true, it returns NULL.
     
        > IF STATEMENT Syntax:
        
	     SELECT columm1, column2,
	     IF (Condition, TRUE Result, FALSE Result ) AS alias_name
	     FROM table_name;
      
                  
 
        > CASE STATEMENT Syntax:

		CASE
		    WHEN condition1 THEN result1
		    WHEN condition2 THEN result2
		    WHEN conditionN THEN resultN
		    ELSE result
		END;   
		

	> CASE Expression Syntax: 

		CASE Expression
		  WHEN value1 THEN result1
		  WHEN value2 THEN result2
		  WHEN valueN THEN resultN
		  ELSE other_result
		END;
		  
	  
	  
//IF STATEMENT Example: 
	     
        Example: 
        
              SELECT id, name, percentage,
              IF(percentage >= 33, "Pass","Fail") AS Result
              FROM students; 
                
                
        Example: 
        
              SELECT id, fname, percentage,
              IF(percentage >= 33, "Pass","Fail") AS Result
              FROM students; 
                             
				+----+---------+------------+--------+
				| id | fname   | percentage | Result |
				+----+---------+------------+--------+
				|  1 | ajay    |         45 | Pass   |
				|  2 | amit    |         25 | Fail   |
				|  3 | geeta   |         61 | Pass   |
				|  4 | akshita |         95 | Pass   |
				|  5 | aura    |         55 | Pass   |
				|  6 | dev     |         72 | Pass   |
				+----+---------+------------+--------+
                                    
                
//CASE STATEMENT Example: 
       
         SELECT customers_id, amount,
         CASE 
            WHEN amount > 100 THEN 'Expressive product'
            WHEN amount = 100 THEN 'Moderate product'
            ELSE "Inexpensive product'
         END AS ProductStatus
         FROM payment;

     Example: 
     
         SELECT id AS 'Roll NO', percentage AS '%',
         CASE 
            WHEN percentage >= 33 AND percentage > 45 THEN 'IIIrd Div'
            WHEN percentage >= 45 AND percentage < 60 THEN 'IInd Div'
            WHEN percentage >=60 AND percentage <= 100 THEN 'Ist Div'
            WHEN percentage < 33 THEN "Fail" 
            ELSE 'No Correct %'
         END AS 'Division'
         FROM students;
				+---------+------+-----------+
				| Roll NO | %    | Division  |
				+---------+------+-----------+
				|       1 |   45 | IInd Div  |
				|       2 |   25 | Failed    |
				|       3 |   61 | IIIrd Div |
				|       4 |   95 | IIIrd Div |
				|       5 |   55 | IIIrd Div |
				|       6 |   72 | IIIrd Div |
				+---------+------+-----------+
                  
         
//CASE Expression Example: 

	 SELECT customer_id
	 CASE amount
	    WHEN 500 THEN 'Prime Customer'
	    WHEN 100 THEN 'Plus Customer'
	    ELSE 'Regular Customer'      
	 END AS CustomerStatus
	 FROM payment        
 
 
    Example: 
    
 	 SELECT emp_id, emp_name, emp_salary,
	 CASE emp_salary
	    WHEN 9000 THEN 'High'
	    WHEN 2000 THEN 'Low'
	    ELSE '-'      
	 END AS 'Status'
	 FROM emp;       
					+--------+----------+------------+--------+
					| emp_id | emp_name | emp_salary | Status |
					+--------+----------+------------+--------+
					|      1 | ajay     |       2000 | Low    |
					|      2 | sonu     |       8000 | -      |
					|      3 | aryan    |       3000 | -      |
					|      4 | aryan    |       9000 | High   |
					|      5 | renu     |       2000 | Low    |
					|      6 | dev      |       4300 | -      |
					|      7 | aura     |       8000 | -      |
					|      8 | rakhi    |       2000 | Low    |
					|      9 | raman    |       8000 | -      |
					|     10 | rakhi    |       7400 | -      |
					+--------+----------+------------+--------+

 
 Example: 
 
 Tabe: Students: Field Names: id, name, percentage, age, gender, ciyt, courses
 
	 SELECT id, name, percentage, 
	 CASE
	    WHEN percentage >= 80 AND percentage <= 100 THEN "Merit"
	    WHEN percentage >= 60 AND percentage < 80 THEN "Ist Division"
	    WHEN percentage >= 45 AND percentage < 60 THEN "Ind Division"
	    WHEN percentage >= 33 AND percentage < 45 THEN "IIIrd Division"
	    WHEN percentage < 33 THEN "Fail" 
	    ELSE "Not Correct %" 
	 END AS Grade
	 FROM students;
 
 
 
 Example: CASE Expression
 
//With Update

	UPDATE students 
	SET percentage = (
	  CASE id
	     WHEN 3 THEN 84
	     WHEN 6 THEN 21
	  END
	) 
	WHERE id IN (3,6);
	 
 
 
 
 
  SQL CASE Examples:
  
      The following SQL goes through conditions and returns a value when the first condition is met:
     
     
        Example:
	
	SELECT OrderID, Quantity,
	CASE
	    WHEN Quantity > 30 THEN 'The quantity is greater than 30'
	    WHEN Quantity = 30 THEN 'The quantity is 30'
	    ELSE 'The quantity is under 30'
	END AS QuantityText
	FROM OrderDetails; 

        The following SQL will order the customers by City. 
        However, if City is NULL, then order by Country:



 Example:
	
	SELECT CustomerName, City, Country
	FROM Customers
	ORDER BY
	(CASE
	    WHEN City IS NULL THEN Country
	    ELSE City
	END); 
	    
	 	  	  
	
The SQL CASE statement evaluates a list of conditions one-by-one and returns a value based on that condition.

	SELECT order_id, item, amount,
	CASE
	  WHEN amout >= 10000 THEN 'HIGH'
	  WHEN amout < 10000 THEN 'LOW'
	END AS amout_category
	FROM orders;	
	
	
	
  Example: 	
	
	SELECT emp_id,emp_salary,
	CASE
	  WHEN emp_salary >= 3000 THEN 'HIGH'
	  WHEN emp_salary < 3000 THEN 'LOW'
	END AS amount_category
	FROM emp;
				+--------+------------+-----------------+
				| emp_id | emp_salary | amount_category |
				+--------+------------+-----------------+
				|      1 |       2000 | LOW             |
				|      2 |       8000 | HIGH            |
				|      3 |       3000 | HIGH            |
				|      4 |       9000 | HIGH            |
				|      5 |       2000 | LOW             |
				|      6 |       4300 | HIGH            |
				|      7 |       8000 | HIGH            |
				|      8 |       2000 | LOW             |
				|      9 |       8000 | HIGH            |
				|     10 |       7400 | HIGH            |
				+--------+------------+-----------------+


  Example: 

	SELECT *, (
	    CASE 
	      WHEN emp_salary <= 3000 THEN '-Low-' 
	      ELSE '-' 
	    END 
	   )
	     AS Status 
	     FROM emp;

			+--------+----------+---------+---------------+------------+---------------------+---------+--------+
			| emp_id | emp_name | emp_age | emp_address   | emp_salary | created_at          | dept_id | Status |
			+--------+----------+---------+---------------+------------+---------------------+---------+--------+
			|      1 | ajay     |      23 | ladpur        |       2000 | 2023-10-23 08:46:28 |     500 | -Low-  |
			|      2 | sonu     |      38 | balawala      |       8000 | 2023-01-13 05:46:28 |     500 |        |
			|      3 | aryan    |      93 | sahastradhara |       3000 | 2023-01-15 02:36:28 |     502 | -Low-  |
			|      4 | aryan    |      93 | dharampur     |       9000 | 2023-02-12 02:10:28 |     500 |        |
			|      5 | renu     |      13 | ladpur        |       2000 | 2023-03-22 04:10:28 |     500 | -Low-  |
			|      6 | dev      |      10 | miyawala      |       4300 | 2023-04-22 04:10:28 |     502 |        |
			|      7 | aura     |      13 | nakronda road |       8000 | 2023-04-12 06:10:28 |     501 |        |
			|      8 | rakhi    |      15 | miyawala      |       2000 | 2023-04-02 09:08:28 |     502 | -Low-  |
			|      9 | raman    |      88 | sahastradhara |       8000 | 2023-05-02 04:08:28 |     500 |        |
			|     10 | rakhi    |      15 | ladpur        |       7400 | 2023-06-02 08:18:28 |     501 |        |
			+--------+----------+---------+---------------+------------+---------------------+---------+--------+

		

THE SQL CASE statement has the following systax:

	SELECT column1, column2.....,
	CASE
	 WHEN condition THEN result
	END AS Alias
	FROM table;


Example 1: 

	SELECT customer_id, first_name,
	CASE
	  WHEN age >= 18 THEN 'ALLowed'
	  ELSE 'Not Allowed'
	END AS can_vote
	FROM customers;
				+-------------+------------+-------------+
				| customer_id | first_name | can_vote    |
				+-------------+------------+-------------+
				|           1 | Jyoti      | ALLowed     |
				|           2 | Rohan      | ALLowed     |
				|           3 | Dev        | ALLowed     |
				|           4 | Johar      | ALLowed     |
				|           5 | Bhanu      | ALLowed     |
				|           6 | sonu       | Not Allowed |
				+-------------+------------+-------------+




//Customer Table: 

create table customers(
 customer_id int auto_increment 
 first_name varchar(20),
 last_name varchar(20),
 age int(2),
 country varchar(20),
primary key(customer_id)
);

INSERT INTO customers(customer_id,first_name,last_name,age,country) 
                     values(1,"john","doe",34,"USA"),
                           (2,"robert","luna",23,"USA"),
                           (3,"david","singh",23,"UK"),
                           (4,"john","pratap",26,"US"),
                           (5,"Betty","doe",29,"UAE"),
                           
                           

Example 2: 

	SELECT order_id, customer_id, 
	CASE
	  WHEN amount >= 400 THEN (amount = amount * 10/100)
	END AS offer_price
	FROM orders;



//SQL CASE with multiple consitions:

   It is possible to stack multiple conditions inside a single CASE clause;
   
	SELECT customer_id, first_name,
	CASE
	  WHEN country = 'USA' THEN 'United States Of America'
	  WHEN country = 'UK' THEN 'United Kindom'
	END AS country_name
	FROM customers;
				+-------------+------------+--------------------------+
				| customer_id | first_name | country_name             |
				+-------------+------------+--------------------------+
				|           1 | Jyoti      | United States Of America |
				|           2 | Rohan      | United States Of America |
				|           3 | Dev        | United Kindom            |
				|           4 | Johar      | United Kindom            |
				|           5 | Bhanu      | NULL                     |
				+-------------+------------+--------------------------+
	
	
//SQL CASE with ELSE:
	
	SELECT customer_id, first_name,
	CASE
	  WHEN country = 'USA' THEN 'United States of America'
	  WHEN country = 'UK' THEN 'United Kindom'
	  ELSE 'Unknown country'
	END AS country_name
	FROM customers;	
						+-------------+------------+--------------------------+
						| customer_id | first_name | country_name             |
						+-------------+------------+--------------------------+
						|           1 | Jyoti      | United States of America |
						|           2 | Rohan      | United States of America |
						|           3 | Dev        | United Kindom            |
						|           4 | Johar      | United Kindom            |
						|           5 | Bhanu      | Unknown country          |
						+-------------+------------+--------------------------+
	


	
// 
The SQL CASE Statement

CASE Statement With ORDER BY Clause
CASE Statement With GROUP BY Clause
CASE Statement With UPDATE statement
CASE Statement Limitations


The SQL CASE Statement

Syntax:

SELECT CASE Expression

When expression1 Then Result1

When expression2 Then Result2

...

ELSE Result

END

	
//CASE
	
	SELECT employee_id, job_title, salary
	CASE
	    WHEN salary >=50000 THEN 'The salary is greater then 50000'
	    WHEN salary >=50000 THEN 'The salary is 50000'
	    ELSE 'The salary is under 50000'
	END AS SalaryText	
	FROM AS employees;



//CASE Statement With ORDER BY Clause

//CASE
	select first_name, office_id, salary
	FROM employees
	ORDER BY CASE office_id
	WHEN '1' THEN salary END DESC,
	CASE WHEN '2' THEN salary
	END;


//CASE Statement With UPDATE statement

	UPDATE officers
	SET state = CASE state
	  WHEN 'HO' THEN 'IN'
	  WHEN 'NY' THEN 'TK'
	  ELSE 'TX'
	  END



//CASE Statement With GROUP BY Clause

	SELECT 
	 CASE
	 WHEN salary >= 80000 AND salary <=100000 THEN 'MID-LEVEL'
	 WHEN salary >= 50000 AND salary <=800000 THEN 'Executive-LEVEL'
	 ELSE 'Senior Level'
	 END AS Designation,
	 Min(salary) as MinimumSalary,
	 Max(salary) as MaximumSalary
	 FROM employees 
	 GROUP BY
	 CASE
	  WHEN salary >= 80000 AND salary <=100000 THEN 'MID-LEVEL'
	  WHEN salary >= 50000 AND salary <=80000 THEN 'Executive-LEVEL'
	  ELSE 'Senior-level'
	 END

---------------------------------------------------------------------


*CASE Statement Limitations

    You cannot control the flow of execution of stored procedures and functions.
    You cannot check the NULL value using the CASE statement.




//IF...ELSE  in SQL Server

	DECLARE @math INT, @phy INT, @chem INT;
	SET @math = 80;
	SET @phy = 78;
	SET @chem = 70;

	IF @math < 50 
	BEGIN
	    PRINT 'You Failed In Math';
	END

        ELSE       
        BEGIN
             PRNT 'You Failed in Math;
        END
	
	 
//While Loop

	DECLARE @count INT, @i INT, @stName VARCHAR(20);
	SELECT @count = COUNT(*) FROM TheStudentTBL;

	WHILE @i <= @count
	BEGIN
	   SELECT @stName = [NAME] FROM TheStudentTBL WHERE ID=@i;
	   SET @i = @i + 1;
	END
		 
	 
	DECLARE @count INT, @i INT, @stName VARCHAR(20);
	SELECT @count = COUNT(*) FROM emp;

	WHILE @i <= @count
	BEGIN
	   SELECT @stName = [NAME] FROM emp WHERE ID=@i;
	   SET @i = @i + 1;
	END;
	 
---x---


