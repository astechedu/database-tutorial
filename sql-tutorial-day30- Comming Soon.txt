# ----> SQL Tutorial ----

# https://github.com/astechedu/database-tutorial.git

# SQL Basics For Beginers



-- Day 24 ---

#24 Subquery: UPDATE Subquery, DELETE Subquery

		Scalar Subqueries
		Multi-row Subqueries
		Correlated Subquries
		
       
Correlated UPDATE:
-----------------

	UPDATE tbl1 alias1
	SET column = (SELECT expression
		     FROM tble2 alias2
		     WHERE alias1.column = alias2.column);
		     


Correlated DELETE:
-----------------

	 DELETE FROM tbl1 alias1
	 WHERE column1 OPERATOR
		       (SELECT expression 
		       FROM tbl2 alias2
		       WHERE alias1.column = alias2.column);
		       
              
      
-- Examples ON Update --
        
              
Examples 01: 

UPDATE stock SET unit_price = unit_price * 0.95 
WHERE unit_price IN (SELECT unit_price FROM stock WHERE unit_price > 50);



Examples 02:

SELECT unit_price FROM stock WHERE unit_price > 50 INTO TEMP tmp1;
UPDATE stock SET unit_price = unit_price * 0.95 
   WHERE unit_price IN ( SELECT * FROM tmp1 );


Examples 03:

UPDATE t1 SET a = a + 10 
   WHERE a > ALL (SELECT a FROM t1  WHERE a > 1) AND
         a > ANY (SELECT a FROM t1  WHERE a > 10) AND
          EXISTS (SELECT a FROM t1  WHERE a > 5);;



Example 04:

CREATE TRIGGER selt11 SELECT ON t1 BEFORE
  (UPDATE d1 
     SET (c1, c2, c3, c4, c5) =
         (c1 + 1, c2 + 1, c3 + 1, c4 + 1, c5 + 1));

UPDATE t2 SET c1 = c1 +1 
   WHERE c1 IN 
      (SELECT t1.c1 from t1 WHERE t1.c1 > 10 );



Example 05:

UPDATE t1 SET a = a + 10 WHERE a in (SELECT a FROM t1 WHERE a > 1
   UNION SELECT a FROM t1, t2 WHERE a < b);



Example 06: 


CREATE ROW TYPE r1 (c1 INT, c2 INT);
CREATE ROW TYPE r2 UNDER r1;
CREATE TABLE t1 OF TYPE r1; -- parent table 
CREATE TABLE t2 OF TYPE r2 UNDER t1; -- child  table 

UPDATE t1 SET c1 = c1 + 1 WHERE c1 IN
   ( SELECT t1.c1 FROM t1 WHERE t1.c1 > 10);

UPDATE t1 SET c1 = c1 + 1 WHERE c1 IN 
   ( SELECT t2.c1 FROM t2 WHERE t2.c1 > 10);  

UPDATE t2 SET c1 = c1 + 1 WHERE c1 IN 
   ( SELECT t2.c1 FROM t2 WHERE t2.c1 > 10);

UPDATE t2 SET c1 = c1 + 1 WHERE c1 IN  
   ( SELECT t1.c1 FROM t1 WHERE t1.c1 > 10);




----x----


Examples On Delete:


1.

DELETE FROM customer1
WHERE agent_code=ANY(
SELECT agent_code FROM agents
WHERE working_area='London');


2.

DELETE FROM agent1 da
WHERE EXISTS(
SELECT * FROM  customer cu
WHERE grade=3
AND da.agent_code<>cu.agent_code);

3.

DELETE FROM agent1 da
WHERE 3 IN(
SELECT grade FROM customer cu
WHERE agent1.agent_code<>customer.agent_code);


4.

DELETE FROM agent1
WHERE agent_code IN
(SELECT agent_code FROM orders a
WHERE ord_amount=(
SELECT MIN(ord_amount) FROM orders b
WHERE a.ord_date=b.ord_date));


5. 

DELETE FROM agent1
WHERE agent_code IN(
SELECT agent_code FROM orders a
WHERE ord_amount=(
SELECT MIN(ord_amount) FROM orders b
WHERE a.ord_date=b.ord_date)
AND 1<(
SELECT COUNT(ord_num) FROM orders b
WHERE a.ord_date=b.ord_date));























-----x-----






Using Exists Operator: 

----------------------
  	 
  	Exists(Q): Returns true if there at least one tuple in the result of query Q  
  	
  	Syntax: 

  	SELECT colume_name(s) FROM tbl_name WHERE EXISTS (Subquery); 
  	
     Ex:
  	SELECT eid, name, FROM teacher as t where exists (SELECT rollno FROM student as s WHERE s.tid = t.tid AND s.sex = 'F');
  
  
     Ex: 
	SELECT emp_id,lname,job_id,dept_id
	FROM employee outer
	WHERE EXISTS (SELECT 'X'
		     FROM employees
		     WHERE manager_id = outer.emp_id);              
		      


Using NOT Exists Operator: 
-------------------------

  	Syntax: 
  	SELECT colume_name(s) FROM tbl_name WHERE NOT EXISTS (Subquery); 
  	
  	
     Ex:
	SELECT emp_id,lname,job_id,dept_id
	FROM employee outer
	WHERE NOT EXISTS (SELECT 'X'
		     FROM employees
		     WHERE manager_id = outer.emp_id);              
		      





  EXISTS & NOT EXISTS:
  
  SELECT *from products p where EXISTS (select o.pid from orders o where o.pid=p.id);
  
				+----+------+-------+------+
				| id | name | price | qty  |
				+----+------+-------+------+
				|  1 | tv   |   388 |    1 |
				|  2 | comb |    89 |    3 |
				+----+------+-------+------+



  SELECT *from products p where NOT EXISTS (select o.pid from orders o where o.pid=p.id);
  
				+----+--------+-------+------+
				| id | name   | price | qty  |
				+----+--------+-------+------+
				|  3 | camera |   636 |    2 |
				|  4 | freeze |  2000 |    3 |
				|  5 | watch  |   150 |    5 |
				|  6 | shoes  |   400 |    7 |
				|  7 | pencil |     5 |   11 |
				|  8 | table  |  3332 |    1 |
				|  9 | bench  |  1011 |    3 |
				| 10 | laptop | 30000 |    1 |
				+----+--------+-------+------+
    


----x----









IN SQL, the operators ANY, ALL & EXISTS are used in combination with subqueries to perform comparisons and logical operations

 ANY Operator
 ALL Operator
 EXISTS Operator

 Examples:

 EXISTS vs IN vs JOINS
 
 
 Syntax: 
 
 SELECT column_name(s)
 FROM table_name
 WHERE column_name operator ANY (Subquery);
 (=,<>, !=, >, >+, < , or <=)
 
 
 Example: 
 select *
 from employee
 where salary = ANY (
       select salary 
       from employee
       where department = 'HR'
);       
 
 
 Syntax: 
 select column_name(s)
 from table_name
 where column_name operator ALL (Subqueries);
 
 select *
 from employee
 where salary > AL (
       select salary 
       from employee
       where department = 'Accounts'
 );
 
 
 
 EXISTS (Logical Operator):
 
 Syntax:
 
 SELECT column_name(ss)
 FROM table_name
 WHERE EXISTS (Subquery);
 
 
 select name
 from customers
 where exists (
     select *
     from orders
     where orders.customer_id = customers.id
);
 
 
 
 Diff ways: 
 
 select name
 from customers
 where name IN (
     select *
     from orders
     where orders.customer_id = customers.id
);

Exists vs IN: 
.Performance
.Readability
.Personal preference


----x----

